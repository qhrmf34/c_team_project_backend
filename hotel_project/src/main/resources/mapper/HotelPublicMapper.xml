<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hotel_project.hotel_jpa.hotel.mapper.HotelPublicMapper">

    <!-- ResultMap 정의 -->
    <resultMap id="HotelSummaryResultMap" type="com.hotel_project.hotel_jpa.hotel.dto.HotelSummaryDto">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="image" column="image"/>
        <result property="imageCount" column="imageCount"/>
        <result property="price" column="price"/>
        <result property="currency" column="currency"/>
        <result property="location" column="location"/>
        <result property="stars" column="stars"/>
        <result property="type" column="type"/>
        <result property="hotelType" column="hotelType"/>
        <result property="amenitiesCount" column="amenitiesCount"/>
        <result property="rating" column="rating"/>
        <result property="ratingText" column="ratingText"/>
        <result property="reviewCount" column="reviewCount"/>
        <result property="wishlisted" column="wishlisted"/>
        <result property="cityName" column="cityName"/>
    </resultMap>

    <!-- 호텔 검색 -->
    <select id="searchHotels" resultMap="HotelSummaryResultMap">
        WITH
        <choose>
            <when test="checkIn != null and checkOut != null">
                date_series AS (
                SELECT DATE_ADD(#{checkIn}, INTERVAL seq DAY) as date
                FROM (
                SELECT 0 as seq UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL
                SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL
                SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL
                SELECT 9 UNION ALL SELECT 10 UNION ALL SELECT 11 UNION ALL
                SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL
                SELECT 15 UNION ALL SELECT 16 UNION ALL SELECT 17 UNION ALL
                SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL
                SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL
                SELECT 24 UNION ALL SELECT 25 UNION ALL SELECT 26 UNION ALL
                SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30
                ) seq_table
                WHERE DATE_ADD(#{checkIn}, INTERVAL seq DAY) &lt; #{checkOut}
                ),
                night_count AS (
                SELECT COUNT(*) as nights FROM date_series
                ),
                room_daily_prices AS (
                SELECT
                r.hotel_id,
                r.id as room_id,
                ds.date,
                rp.price as daily_price,  -- ⭐ COALESCE 제거
                rp.id as pricing_id       -- ⭐ pricing 존재 확인용
                FROM room_tbl r
                CROSS JOIN date_series ds
                LEFT JOIN room_pricing_tbl rp
                ON r.id = rp.room_id
                AND rp.date = ds.date
                ),
                room_prices AS (
                SELECT
                hotel_id,
                room_id,
                SUM(daily_price) as total_price,
                COUNT(pricing_id) as pricing_count,  -- ⭐ pricing이 있는 날짜 수
                (SELECT nights FROM night_count) as expected_nights  -- ⭐ 기대하는 날짜 수
                FROM room_daily_prices
                GROUP BY hotel_id, room_id
                HAVING pricing_count = expected_nights  -- ⭐ 모든 날짜에 pricing이 있어야 함
                AND total_price > 0                   -- ⭐ 가격이 0보다 커야 함
                ),
                min_hotel_prices AS (
                SELECT
                rp.hotel_id,
                MIN(rp.total_price) as min_total_price,
                MIN(rp.total_price) / nc.nights as avg_nightly_price
                FROM room_prices rp
                CROSS JOIN night_count nc
                GROUP BY rp.hotel_id, nc.nights
                )
            </when>
            <otherwise>
                min_hotel_prices AS (
                SELECT
                hotel_id,
                MIN(base_price) as min_total_price,
                MIN(base_price) as avg_nightly_price
                FROM room_tbl
                GROUP BY hotel_id
                )
            </otherwise>
        </choose>

        SELECT
        h.id,
        h.hotel_name as title,
        (SELECT hi.hotel_image_path
        FROM hotel_image_tbl hi
        WHERE hi.hotel_id = h.id
        ORDER BY hi.created_at ASC
        LIMIT 1) as image,
        (SELECT COUNT(*)
        FROM hotel_image_tbl hi2
        WHERE hi2.hotel_id = h.id) as imageCount,
        mhp.min_total_price as price,
        'KRW' as currency,
        CONCAT(c.city_name, ', ', co.country_name) as location,
        h.hotel_star as stars,
        NULL as type,
        h.hotel_type as hotelType,
        (SELECT COUNT(*)
        FROM hotel_amenities_tbl ha
        WHERE ha.hotel_id = h.id) as amenitiesCount,
        h.hotel_rating as rating,
        NULL as ratingText,
        0 as reviewCount,
        FALSE as wishlisted,
        c.city_name as cityName
        FROM hotel_tbl h
        LEFT JOIN city_tbl c ON h.city_id = c.id
        LEFT JOIN country_tbl co ON c.country_id = co.id
        INNER JOIN min_hotel_prices mhp ON h.id = mhp.hotel_id  -- ⭐ LEFT → INNER JOIN으로 변경
        WHERE 1=1

        <if test="destination != null and destination != ''">
            AND (h.hotel_name LIKE CONCAT('%', #{destination}, '%')
            OR c.city_name LIKE CONCAT('%', #{destination}, '%')
            OR co.country_name LIKE CONCAT('%', #{destination}, '%'))
        </if>

        <if test="hotelType != null and hotelType != ''">
            AND h.hotel_type = #{hotelType}
        </if>

        <if test="rating != null and rating > 0">
            AND h.hotel_rating &gt;= #{rating}
        </if>

        <if test="guests != null and guests > 0">
            AND EXISTS (
            SELECT 1
            FROM room_tbl r
            WHERE r.hotel_id = h.id
            AND (r.room_single_bed + (r.room_double_bed * 2)) &gt;= #{guests}
            )
        </if>

        <if test="minPrice != null or maxPrice != null">
            AND mhp.avg_nightly_price BETWEEN
            <choose>
                <when test="minPrice != null">#{minPrice}</when>
                <otherwise>0</otherwise>
            </choose>
            AND
            <choose>
                <when test="maxPrice != null">#{maxPrice}</when>
                <otherwise>999999999</otherwise>
            </choose>
        </if>

        <if test="freebies != null and freebies.size() > 0">
            <foreach collection="freebies" item="freebieId">
                AND EXISTS (
                SELECT 1
                FROM hotel_freebies_tbl hf
                WHERE hf.hotel_id = h.id
                AND hf.freebies_id = #{freebieId}
                )
            </foreach>
        </if>

        <if test="amenities != null and amenities.size() > 0">
            <foreach collection="amenities" item="amenityId">
                AND EXISTS (
                SELECT 1
                FROM hotel_amenities_tbl ha
                WHERE ha.hotel_id = h.id
                AND ha.amenities_id = #{amenityId}
                )
            </foreach>
        </if>

        <choose>
            <when test="sortBy == 'price_asc'">
                ORDER BY mhp.avg_nightly_price ASC
            </when>
            <when test="sortBy == 'price_desc'">
                ORDER BY mhp.avg_nightly_price DESC
            </when>
            <when test="sortBy == 'rating'">
                ORDER BY h.hotel_rating DESC
            </when>
            <otherwise>
                ORDER BY h.hotel_rating DESC, h.hotel_star DESC
            </otherwise>
        </choose>

        LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 검색 결과 총 개수 -->
    <select id="countSearchHotels" resultType="java.lang.Long">
        WITH
        <choose>
            <when test="checkIn != null and checkOut != null">
                date_series AS (
                SELECT DATE_ADD(#{checkIn}, INTERVAL seq DAY) as date
                FROM (
                SELECT 0 as seq UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL
                SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL
                SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL
                SELECT 9 UNION ALL SELECT 10 UNION ALL SELECT 11 UNION ALL
                SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL
                SELECT 15 UNION ALL SELECT 16 UNION ALL SELECT 17 UNION ALL
                SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL
                SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL
                SELECT 24 UNION ALL SELECT 25 UNION ALL SELECT 26 UNION ALL
                SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30
                ) seq_table
                WHERE DATE_ADD(#{checkIn}, INTERVAL seq DAY) &lt; #{checkOut}
                ),
                night_count AS (
                SELECT COUNT(*) as nights FROM date_series
                ),
                room_daily_prices AS (
                SELECT
                r.hotel_id,
                r.id as room_id,
                ds.date,
                rp.price as daily_price,
                rp.id as pricing_id            -- pricing 존재 확인용
                FROM room_tbl r
                CROSS JOIN date_series ds
                LEFT JOIN room_pricing_tbl rp
                ON r.id = rp.room_id
                AND rp.date = ds.date
                ),
                room_prices AS (
                SELECT
                hotel_id,
                room_id,
                SUM(daily_price) as total_price,
                COUNT(pricing_id) as pricing_count,
                (SELECT nights FROM night_count) as expected_nights
                FROM room_daily_prices
                GROUP BY hotel_id, room_id
                HAVING pricing_count = expected_nights  -- 모든 날짜에 pricing 필요
                AND total_price > 0
                ),
                min_hotel_prices AS (
                SELECT
                rp.hotel_id,
                MIN(rp.total_price) / nc.nights as avg_nightly_price
                FROM room_prices rp
                CROSS JOIN night_count nc
                GROUP BY rp.hotel_id, nc.nights
                )
            </when>
            <when test="minPrice != null or maxPrice != null">
                min_hotel_prices AS (
                SELECT
                hotel_id,
                MIN(base_price) as avg_nightly_price
                FROM room_tbl
                GROUP BY hotel_id
                )
            </when>
            <otherwise>
                dummy_cte AS (SELECT 1 as dummy)
            </otherwise>
        </choose>

        SELECT COUNT(DISTINCT h.id)
        FROM hotel_tbl h
        LEFT JOIN city_tbl c ON h.city_id = c.id
        LEFT JOIN country_tbl co ON c.country_id = co.id
        <choose>
            <when test="checkIn != null and checkOut != null">
                INNER JOIN min_hotel_prices mhp ON h.id = mhp.hotel_id
            </when>
            <when test="minPrice != null or maxPrice != null">
                LEFT JOIN min_hotel_prices mhp ON h.id = mhp.hotel_id
            </when>
        </choose>
        WHERE 1=1

        <if test="destination != null and destination != ''">
            AND (h.hotel_name LIKE CONCAT('%', #{destination}, '%')
            OR c.city_name LIKE CONCAT('%', #{destination}, '%')
            OR co.country_name LIKE CONCAT('%', #{destination}, '%'))
        </if>

        <if test="hotelType != null and hotelType != ''">
            AND h.hotel_type = #{hotelType}
        </if>

        <if test="rating != null and rating > 0">
            AND h.hotel_rating &gt;= #{rating}
        </if>

        <if test="guests != null and guests > 0">
            AND EXISTS (
            SELECT 1
            FROM room_tbl r
            WHERE r.hotel_id = h.id
            AND (r.room_single_bed + (r.room_double_bed * 2)) &gt;= #{guests}
            )
        </if>

        <if test="minPrice != null or maxPrice != null">
            AND mhp.avg_nightly_price BETWEEN
            <choose>
                <when test="minPrice != null">#{minPrice}</when>
                <otherwise>0</otherwise>
            </choose>
            AND
            <choose>
                <when test="maxPrice != null">#{maxPrice}</when>
                <otherwise>999999999</otherwise>
            </choose>
        </if>

        <if test="freebies != null and freebies.size() > 0">
            <foreach collection="freebies" item="freebieId">
                AND EXISTS (
                SELECT 1
                FROM hotel_freebies_tbl hf
                WHERE hf.hotel_id = h.id
                AND hf.freebies_id = #{freebieId}
                )
            </foreach>
        </if>

        <if test="amenities != null and amenities.size() > 0">
            <foreach collection="amenities" item="amenityId">
                AND EXISTS (
                SELECT 1
                FROM hotel_amenities_tbl ha
                WHERE ha.hotel_id = h.id
                AND ha.amenities_id = #{amenityId}
                )
            </foreach>
        </if>
    </select>

    <!-- 호텔 상세 조회 -->
    <select id="findHotelDetailById" resultType="com.hotel_project.hotel_jpa.hotel.dto.HotelDetailDto">
        SELECT
            h.id,
            h.hotel_name as hotelName,
            h.hotel_content as description,
            CONCAT(c.city_name, ', ', co.country_name) as address,
            c.city_name as cityName,
            co.country_name as countryName,
            h.hotel_latitude as latitude,
            h.hotel_longitude as longitude,
            h.hotel_number as phoneNumber,
            h.hotel_type as hotelType,
            h.hotel_star as starRating,
            h.hotel_rating as averageRating,
            0 as reviewCount,
            h.checkin_time as checkInTime,
            h.checkout_time as checkOutTime,
            (SELECT MIN(r.base_price)
             FROM room_tbl r
             WHERE r.hotel_id = h.id) as minPrice,
            FALSE as wishlisted
        FROM hotel_tbl h
                 LEFT JOIN city_tbl c ON h.city_id = c.id
                 LEFT JOIN country_tbl co ON c.country_id = co.id
        WHERE h.id = #{hotelId}
    </select>

    <!-- 호텔의 무료 서비스 조회 -->
    <select id="findFreebiesByHotelId" resultType="com.hotel_project.hotel_jpa.freebies.dto.FreebiesDto">
        SELECT
            f.id,
            f.freebies_name as freebiesName
        FROM freebies_tbl f
                 INNER JOIN hotel_freebies_tbl hf ON f.id = hf.freebies_id
        WHERE hf.hotel_id = #{hotelId}
        ORDER BY f.id
    </select>

    <!-- 호텔의 편의시설 조회 -->
    <select id="findAmenitiesByHotelId" resultType="com.hotel_project.hotel_jpa.amenities.dto.AmenitiesDto">
        SELECT
            a.id,
            a.amenities_name as amenitiesName
        FROM amenities_tbl a
                 INNER JOIN hotel_amenities_tbl ha ON a.id = ha.amenities_id
        WHERE ha.hotel_id = #{hotelId}
        ORDER BY a.id
    </select>

    <!-- 호텔 이미지 조회 -->
    <select id="findImagesByHotelId" resultType="java.lang.String">
        SELECT hotel_image_path
        FROM hotel_image_tbl
        WHERE hotel_id = #{hotelId}
        ORDER BY created_at ASC
    </select>

    <!-- 호텔의 객실 조회 (날짜별 가용성 포함) -->
    <select id="findAvailableRoomsByHotelId" resultType="com.hotel_project.hotel_jpa.room.dto.RoomDto">
        SELECT
            r.id,
            r.hotel_id as hotelId,
            r.room_name as roomName,
            r.room_single_bed as roomSingleBed,
            r.room_double_bed as roomDoubleBed,
            COALESCE(rp.price, r.base_price) as basePrice,
            r.room_number as roomNumber,
            r.room_view as roomView,
            r.created_at as createdAt,
            r.updated_at as updatedAt
        FROM room_tbl r
                 LEFT JOIN room_pricing_tbl rp ON r.id = rp.room_id
            AND rp.date BETWEEN #{checkIn} AND #{checkOut}
        WHERE r.hotel_id = #{hotelId}
        GROUP BY r.id
        ORDER BY r.base_price ASC
    </select>

    <!-- 호텔의 전체 객실 조회 -->
    <select id="findRoomsByHotelId" resultType="com.hotel_project.hotel_jpa.room.dto.RoomDto">
        SELECT
            r.id,
            r.hotel_id as hotelId,
            r.room_name as roomName,
            r.room_single_bed as roomSingleBed,
            r.room_double_bed as roomDoubleBed,
            r.base_price as basePrice,
            r.room_number as roomNumber,
            r.room_view as roomView,
            r.created_at as createdAt,
            r.updated_at as updatedAt
        FROM room_tbl r
        WHERE r.hotel_id = #{hotelId}
        ORDER BY r.base_price ASC
    </select>

    <!-- 호텔 리뷰 조회 -->
    <select id="findReviewsByHotelId" resultType="com.hotel_project.review_jpa.reviews.dto.ReviewsDto">
        SELECT
            r.id,
            r.member_id as memberId,
            r.hotel_id as hotelId,
            r.reservations_id as reservationsId,
            r.rating,
            r.review_content as reviewContent,
            r.review_card as reviewCard,
            r.created_at as createdAt,
            r.updated_at as updatedAt
        FROM reviews_tbl r
        WHERE r.hotel_id = #{hotelId}
        ORDER BY r.created_at DESC
            LIMIT 18446744073709551615 OFFSET #{offset}
    </select>

    <!-- 무료 서비스 옵션 조회 -->
    <select id="findFreebiesOptions" resultType="com.hotel_project.hotel_jpa.freebies.dto.FreebiesDto">
        SELECT
            id,
            freebies_name as freebiesName
        FROM freebies_tbl
        ORDER BY id
    </select>

    <!-- 편의시설 옵션 조회 -->
    <select id="findAmenitiesOptions" resultType="com.hotel_project.hotel_jpa.amenities.dto.AmenitiesDto">
        SELECT
            id,
            amenities_name as amenitiesName
        FROM amenities_tbl
        ORDER BY id
    </select>

    <!-- 가격 범위 조회 -->
    <select id="findPriceRange" resultType="com.hotel_project.hotel_jpa.hotel.dto.PriceRangeDto">
        SELECT
            MIN(base_price) as min,
            MAX(base_price) as max
        FROM room_tbl
    </select>

    <!-- 호텔 타입별 개수 조회 -->
    <select id="countByType" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM hotel_tbl
        WHERE hotel_type = #{hotelType}
    </select>

    <!-- 검색 조건에 따른 호텔 타입별 개수 조회 -->
    <select id="countByTypeWithFilters" resultType="java.lang.Long">
        WITH
        <choose>
            <when test="checkIn != null and checkOut != null">
                date_series AS (
                SELECT DATE_ADD(#{checkIn}, INTERVAL seq DAY) as date
                FROM (
                SELECT 0 as seq UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL
                SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL
                SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL
                SELECT 9 UNION ALL SELECT 10 UNION ALL SELECT 11 UNION ALL
                SELECT 12 UNION ALL SELECT 13 UNION ALL SELECT 14 UNION ALL
                SELECT 15 UNION ALL SELECT 16 UNION ALL SELECT 17 UNION ALL
                SELECT 18 UNION ALL SELECT 19 UNION ALL SELECT 20 UNION ALL
                SELECT 21 UNION ALL SELECT 22 UNION ALL SELECT 23 UNION ALL
                SELECT 24 UNION ALL SELECT 25 UNION ALL SELECT 26 UNION ALL
                SELECT 27 UNION ALL SELECT 28 UNION ALL SELECT 29 UNION ALL SELECT 30
                ) seq_table
                WHERE DATE_ADD(#{checkIn}, INTERVAL seq DAY) &lt; #{checkOut}
                ),
                night_count AS (
                SELECT COUNT(*) as nights FROM date_series
                ),
                room_daily_prices AS (
                SELECT
                r.hotel_id,
                r.id as room_id,
                ds.date,
                rp.price as daily_price,
                rp.id as pricing_id            -- pricing 존재 확인용
                FROM room_tbl r
                CROSS JOIN date_series ds
                LEFT JOIN room_pricing_tbl rp
                ON r.id = rp.room_id
                AND rp.date = ds.date
                ),
                room_prices AS (
                SELECT
                hotel_id,
                room_id,
                SUM(daily_price) as total_price,
                COUNT(pricing_id) as pricing_count,
                (SELECT nights FROM night_count) as expected_nights
                FROM room_daily_prices
                GROUP BY hotel_id, room_id
                HAVING pricing_count = expected_nights  -- 모든 날짜에 pricing 필요
                AND total_price > 0
                ),
                min_hotel_prices AS (
                SELECT
                rp.hotel_id,
                MIN(rp.total_price) / nc.nights as avg_nightly_price
                FROM room_prices rp
                CROSS JOIN night_count nc
                GROUP BY rp.hotel_id, nc.nights
                )
            </when>
            <when test="minPrice != null or maxPrice != null">
                min_hotel_prices AS (
                SELECT
                hotel_id,
                MIN(base_price) as avg_nightly_price
                FROM room_tbl
                GROUP BY hotel_id
                )
            </when>
            <otherwise>
                dummy_cte AS (SELECT 1 as dummy)
            </otherwise>
        </choose>

        SELECT COUNT(DISTINCT h.id)
        FROM hotel_tbl h
        LEFT JOIN city_tbl c ON h.city_id = c.id
        LEFT JOIN country_tbl co ON c.country_id = co.id
        <choose>
            <when test="checkIn != null and checkOut != null">
                INNER JOIN min_hotel_prices mhp ON h.id = mhp.hotel_id
            </when>
            <when test="minPrice != null or maxPrice != null">
                LEFT JOIN min_hotel_prices mhp ON h.id = mhp.hotel_id
            </when>
        </choose>
        WHERE h.hotel_type = #{hotelType}

        <if test="destination != null and destination != ''">
            AND (h.hotel_name LIKE CONCAT('%', #{destination}, '%')
            OR c.city_name LIKE CONCAT('%', #{destination}, '%')
            OR co.country_name LIKE CONCAT('%', #{destination}, '%'))
        </if>

        <if test="rating != null and rating > 0">
            AND h.hotel_rating &gt;= #{rating}
        </if>

        <if test="guests != null and guests > 0">
            AND EXISTS (
            SELECT 1
            FROM room_tbl r
            WHERE r.hotel_id = h.id
            AND (r.room_single_bed + (r.room_double_bed * 2)) &gt;= #{guests}
            )
        </if>

        <if test="minPrice != null or maxPrice != null">
            AND mhp.avg_nightly_price BETWEEN
            <choose>
                <when test="minPrice != null">#{minPrice}</when>
                <otherwise>0</otherwise>
            </choose>
            AND
            <choose>
                <when test="maxPrice != null">#{maxPrice}</when>
                <otherwise>999999999</otherwise>
            </choose>
        </if>

        <if test="freebies != null and freebies.size() > 0">
            <foreach collection="freebies" item="freebieId">
                AND EXISTS (
                SELECT 1
                FROM hotel_freebies_tbl hf
                WHERE hf.hotel_id = h.id
                AND hf.freebies_id = #{freebieId}
                )
            </foreach>
        </if>

        <if test="amenities != null and amenities.size() > 0">
            <foreach collection="amenities" item="amenityId">
                AND EXISTS (
                SELECT 1
                FROM hotel_amenities_tbl ha
                WHERE ha.hotel_id = h.id
                AND ha.amenities_id = #{amenityId}
                )
            </foreach>
        </if>
    </select>

    <!-- 찜한 호텔 목록 조회 -->
    <select id="findWishlistHotelsByMemberId" resultMap="HotelSummaryResultMap">
        SELECT
            h.id,
            h.hotel_name as title,
            (SELECT hi.hotel_image_path
             FROM hotel_image_tbl hi
             WHERE hi.hotel_id = h.id
             ORDER BY hi.created_at ASC
                            LIMIT 1) as image,
            (SELECT COUNT(*)
             FROM hotel_image_tbl hi2
             WHERE hi2.hotel_id = h.id) as imageCount,
            (SELECT MIN(r.base_price)
             FROM room_tbl r
             WHERE r.hotel_id = h.id) as price,
            'KRW' as currency,
            CONCAT(ci.city_name, ', ', co.country_name) as location,
            h.hotel_star as stars,
            NULL as type,
            h.hotel_type as hotelType,
            (SELECT COUNT(*)
             FROM hotel_amenities_tbl ha
             WHERE ha.hotel_id = h.id) as amenitiesCount,
            h.hotel_rating as rating,
            NULL as ratingText,
            0 as reviewCount,
            TRUE as wishlisted,
            ci.city_name as cityName
        FROM hotel_tbl h
            INNER JOIN cart_tbl ca ON h.id = ca.hotel_id
            LEFT JOIN city_tbl ci ON h.city_id = ci.id
            LEFT JOIN country_tbl co ON ci.country_id = co.id
        WHERE ca.member_id = #{memberId}
        ORDER BY ca.created_at DESC
    </select>

</mapper>