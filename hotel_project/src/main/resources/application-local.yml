spring:
  application:
    name: hotel_project
  config:
    active:
      on-profile: local
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:13334/testdb
    username: hotel_user
    password: hotel_pass
  mustache:
    suffix: .html
    servlet:
      cache: false
  jpa:
    hibernate:
      ddl-auto: update

  # 이메일 설정 추가
  mail:
    host: smtp.naver.com
    port: 587
    username:   # 네이버 이메일 주소
    password:   # 네이버 앱 비밀번호
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: http://localhost:8089/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            scope: profile_nickname

          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8089/login/oauth2/code/google
            scope:
              - openid
              - profile
              - email
            client-name: Google
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8089/login/oauth2/code/naver
            scope:
              - name
              - email
            client-name: Naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

server:
  port: 8089

# JWT 설정
jwt:
  secret: hotel_project_super_secret_key_for_jwt_token_generation_minimum_256_bits
  expiration: 86400  # 1일 (초 단위)

# 이메일 인증 설정 추가
email:
  verification:
    expiration: 300  # 5분 (초 단위)
    from-email:   # 발신자 이메일

mybatis:
  mapper-locations: classpath:/mapper/**/*.xml
  type-aliases-package: com.hotel_project
  configuration:
    map-underscore-to-camel-case: true

# SpringDoc OpenAPI 설정
springdoc:
  packages-to-scan: com.hotel_project
  paths-to-match: /api/**

# 로깅 설정
logging:
  level:
    com.hotel_project: DEBUG
    org.springframework.security: DEBUG
    org.springframework.mail: DEBUG  # 이메일 디버깅용